{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/article/[articleId]",
      "regex": "^/article/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtParticleId": "nxtParticleId"
      },
      "namedRegex": "^/article/(?<nxtParticleId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/blog/[id]",
      "regex": "^/blog/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/blog/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/meetup/[id]",
      "regex": "^/meetup/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/meetup/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/policy/[type]",
      "regex": "^/policy/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtype": "nxtPtype"
      },
      "namedRegex": "^/policy/(?<nxtPtype>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/auth",
      "regex": "^/auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/guide",
      "regex": "^/guide(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/guide(?:/)?$"
    },
    {
      "page": "/home",
      "regex": "^/home(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/home(?:/)?$"
    },
    {
      "page": "/library",
      "regex": "^/library(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/library(?:/)?$"
    },
    {
      "page": "/meetup",
      "regex": "^/meetup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/meetup(?:/)?$"
    },
    {
      "page": "/payment",
      "regex": "^/payment(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment(?:/)?$"
    },
    {
      "page": "/payment/result",
      "regex": "^/payment/result(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payment/result(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/shadow",
      "regex": "^/shadow(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shadow(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}